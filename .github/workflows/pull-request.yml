name: pull-request

on:
  pull_request:
    branches:
      - master

jobs:
  independent:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pydantic-settings-version: [ '~=2.0.0', '']
        # ToDo (tribunsky.kir): make avro extra too but do not forget to require requests in the sake of SRs
        dataclasses-avroschema-version: [ '==0.53.0', '~=0.53.0', '==0.54.0', '~=0.60.0', '']
        python-version: ['3.9', '3.10', '3.11', '3.12']
    container: python:${{ matrix.python-version }}-slim-bookworm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: install system dependencies
        run: |
          apt-get update
          apt-get install -y librdkafka1
      - name: install confluent-kafka w/o SASL/SSL support
        run: |
          pip install confluent-kafka[avro]~=2.5.3
      - name: Install testing dependencies
        run: |
          if pip install pytest pydantic-settings{{ matrix.pydantic-settings-version }} dataclasses-avroschema${{ matrix.dataclasses-avroschema-version }}; then
              echo "Installed dependencies simultaneously"
          else
              echo "Error resolving dependencies... Installing consequently"
              python -m pip install pytest 
              python -m pip install pydantic-settings${{ matrix.pydantic-settings-version }} 
              python -m pip install dataclasses-avroschema${{ matrix.dataclasses-avroschema-version }}
          fi
      - name: run pytest
        run: pytest -s tests/
      - name: Install dependencies
        run: |
          pip install -U mypy==1.10.0
      - name: run mypy
        run: mypy --config pyproject.toml .
  checks:
    needs: [independent]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pydantic-settings-version: ['~=2.0.0', '']
        dataclasses-avroschema-version: [ '==0.53.0', '~=0.53.0', '==0.54.0', '~=0.60.0','']
        python-version: ['3.9', '3.10', '3.11', '3.12']
        requests-kerberos-version: ['==0.13.0']
        confluent-kafka-version: ['~=2.5.3', '']
    container: python:${{ matrix.python-version }}-slim-bookworm
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install system dependencies
      run: |
        apt-get update && \
        apt-get install -y librdkafka1 \
                           krb5-user \
                           libsasl2-modules-gssapi-mit \
                           librdkafka-dev \
                           libsasl2-dev \
                           libkrb5-dev \
                           libssl-dev \
                           g++
    - name: Install testing dependencies
      run: | 
        if pip install pytest pydantic-settings{{ matrix.pydantic-settings-version }} dataclasses-avroschema${{ matrix.dataclasses-avroschema-version }} requests-kerberos${{ matrix.requests-kerberos-version }} confluent-kafka[avro]${{ matrix.confluent-kafka-version }}; then
            echo "Installed dependencies simultaneously"     
        else
            echo "Error resolving dependencies... Installing consequently"
            python -m pip install pytest 
            python -m pip install pydantic-settings${{ matrix.pydantic-settings-version }} 
            python -m pip install dataclasses-avroschema${{ matrix.dataclasses-avroschema-version }}
            python -m pip install requests-kerberos${{ matrix.requests-kerberos-version }}
            python -m pip install confluent-kafka[avro]${{ matrix.confluent-kafka-version }}
        fi
    - name: run pytest
      run: pytest -s tests/
    - name: Install dependencies
      run: |
        pip install -U mypy==1.10.0
    - name: run mypy
      run: mypy --config pyproject.toml .

  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Switch branch
        run: git checkout $GITHUB_HEAD_REF

      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v9.19.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: [checks, version]
    runs-on: ubuntu-latest
    environment: test-release
    permissions:
      id-token: write
    steps:
    - name: Install packaging dependencies
      run: pip install build
    - uses: actions/checkout@v4
    - name: sed version
      run: |
        echo "Got version from vcs: ${{ needs.version.outputs.tag }}"
        sed -i 's/version = \"0.0.0\"/version = \"${{ needs.version.outputs.tag }}\"/' pyproject.toml
        cat pyproject.toml | grep -i version
    - name: Build package
      run: python -m build
    - name: Publish package to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
