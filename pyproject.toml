[project]
name = "wunderkafka"
version = "0.19.0-beta.4"
description = "librdkafka-powered client for Kafka for python with (hopefully) more handful API"
readme = "README.md"
keywords = ["kafka", "cloudera", "confluent"]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
authors = [{name = "Kirill Tribunsky", email = "tribunsky.kir@yandex.ru"}]
urls = {"Homepage" = "https://github.com/severstal-digital/wunderkafka", "Bug Tracker" = "https://github.com/severstal-digital/wunderkafka/issues"}
requires-python = ">=3.9"

dependencies = [
	"confluent-kafka>=1.9.0",
	"avro-python3>=1.10.0",
	"dataclasses-avroschema[pydantic]>=0.53.0",
	"fastavro>=1.4.7",
	"pydantic-settings>2.0",
]

[project.optional-dependencies]
krb = ["requests-kerberos>=0.13.0", "python-dateutil"]
json = ["jsonschema>=4.17.3"]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[tool.setuptools.packages.find]
exclude = ["tests"]

# TODO: flake8 will be replaced with ruff

# [tool.flake8]
# max-line-length = 120
# max-complexity = 15
# exclude = ["wunderkafka/config/generated"]
# per-file-ignores = {
#     "wunderkafka/__init__.py" = "F401",
#     "wunderkafka/config/__init__.py" = "F401",
#     "wunderkafka/config/generated/enums.py" = "F811,E303",
#     "wunderkafka/config/generated/models.py" = "F811,E303,WPS432",
#     "wunderkafka/schema_registry/__init__.py" = "F401",
#     "wunderkafka/schema_registry/clients/compat.py" = "F401",
#     "wunderkafka/serdes/avro/__init__.py" = "F401",
#     "wunderkafka/serdes/avromodel/__init__.py" = "F401",
#     "wunderkafka/serdes/json/__init__.py" = "F401",
#     "wunderkafka/serdes/jsonmodel/__init__.py" = "F401",
#     "wunderkafka/tests/__init__.py" = "F401"
# }

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
default_section = "THIRDPARTY"
line_length = 120
length_sort = true
known_first_party = ["wunderkafka", "tests"]

[tool.darglint]
docstring_style = "sphinx"

[tool.pytest.ini_options]
python_classes = "!Test"

[tool.mypy]
exclude = "examples"
plugins = ["pydantic.mypy"]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = false
no_implicit_optional = true
strict_optional = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = [
	"confluent_kafka.*",
	"dateutil.*",
	"dataclasses_avroschema.*",
	"fastavro.*",
	"loguru.*",
	"pydantic.*",
	"requests.*",
	"requests_kerberos.*",
	"setuptools.*"
]
ignore_missing_imports = true

# Настройки для semantic

[tool.semantic_release]
assets = []
build_command = "python3 -m pip install build && python3 -m build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
commit_author = "semantic-release <semantic-release@severstal.com>"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]
[tool.semantic_release.branches.main]
match = "(main|master|cloudera)"
prerelease_token = "rc"
prerelease = false
[tool.semantic_release.branches.other]
match = ".*"
prerelease_token = "beta"
prerelease = true
[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = []

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true
[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0
[tool.semantic_release.remote]
name = "origin"
type = "github"
token = { env = "GITHUB_TOKEN" }
ignore_token_for_push = false
insecure = true
[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.ruff]
target-version="py39"
exclude = [
	"wunderkafka/config/generated/*",
	"examples/*"
]

[tool.uv]
dev-dependencies = [
    "attrs>=25.1.0",
    "cachetools>=5.5.2",
    "httpx>=0.28.1",
    "pytest-icdiff>=0.9",
    "pytest>=8.3.4",
    "requests>=2.32.3",
]
