[metadata]
name = wunderkafka
version = 0.0.0
description = librdkafka-powered client for Kafka for python with (hopefully) more handful API
long_description = file: README.md
long_description_content_type = text/markdown
keywords = kafka, cloudera, confluent
license = Apache-2.0 License
classifiers =
    Development Status :: 4 - Beta
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Intended Audience :: Developers
    Topic :: Software Development :: Libraries :: Python Modules

author = Kirill Tribunsky
author_email = tribunsky.kir@yandex.ru
url = https://github.com/severstal-digital/wunderkafka
project_urls =
    Bug Tracker = https://github.com/severstal-digital/wunderkafka/issues


[global]
no-binary = confluent-kafka

[options]
packages = find:
python_requires = >=3.9
include_package_data = True
install_requires =
    confluent-kafka[avro]>=1.2.0
    avro-python3>=1.10.0
    dataclasses-avroschema>=0.53.0
    fastavro>=1.4.7
    pydantic-settings>2.0

[options.packages.find]
exclude=tests

[options.extras_require]
krb = requests-kerberos>=0.13.0; python-dateutil
json = jsonschema>=4.17.3

[flake8]
max-line-length = 120
max-complexity = 15

# wemake-python-styleguide
i-control-code = False

exclude =
  wunderkafka/config/generated
# Ignoring specific errors:
per-file-ignores =
  # let's reimport (public API):
  wunderkafka/__init__.py: F401
  wunderkafka/config/__init__.py: F401
  wunderkafka/config/generated/enums.py: F811,E303
  wunderkafka/config/generated/models.py: F811,E303
  wunderkafka/schema_registry/__init__.py: F401
  wunderkafka/schema_registry/clients/compat.py: F401
  wunderkafka/serdes/avro/__init__.py: F401
  wunderkafka/serdes/avromodel/__init__.py: F401
  wunderkafka/serdes/json/__init__.py: F401
  wunderkafka/serdes/jsonmodel/__init__.py: F401
  wunderkafka/tests/__init__.py: F401
  # It's autogenerated and FULL of magic numbers. Seriously.
  wunderkafka/config/generated/models.py: WPS432

[isort]
multi_line_output = 3
include_trailing_comma = true
default_section = THIRDPARTY
line_length = 120
length_sort = 1
known_first_party = wunderkafka, tests


[darglint]
docstring_style=sphinx

[tool:pytest]
python_classes = !Test

[mypy]
exclude = examples
plugins = pydantic.mypy

# Untyped definitions and calls:
#   https://mypy.readthedocs.io/en/stable/config_file.html#untyped-definitions-and-calls
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True

# Configuring warnings
#   https://mypy.readthedocs.io/en/stable/config_file.html#configuring-warnings
warn_redundant_casts = True
# Different version of python & mypy has different bugs, so in some versions ignore is necessary
warn_unused_ignores = False

no_implicit_optional = True
strict_optional = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True

;# Import discovery
;#   https://mypy.readthedocs.io/en/stable/config_file.html#import-discovery
;

[mypy-dataclasses_avroschema.*]
ignore_missing_imports = True

[mypy-confluent_kafka.*]
ignore_missing_imports = True

[mypy-dateutil.*]
ignore_missing_imports = True

[mypy-fastavro.*]
ignore_missing_imports = True

[mypy-loguru.*]
ignore_missing_imports = True

[mypy-pydantic.*]
ignore_missing_imports = True

[mypy-requests.*]
ignore_missing_imports = True

[mypy-requests_kerberos.*]
ignore_missing_imports = True

[mypy-setuptools.*]
ignore_missing_imports = True
